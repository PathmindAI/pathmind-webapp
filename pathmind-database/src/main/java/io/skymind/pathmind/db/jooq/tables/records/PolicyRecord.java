/*
 * This file is generated by jOOQ.
 */
package io.skymind.pathmind.db.jooq.tables.records;


import io.skymind.pathmind.db.jooq.tables.Policy;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PolicyRecord extends UpdatableRecordImpl<PolicyRecord> implements Record10<Long, Long, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Boolean, Boolean, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.policy.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.policy.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.policy.run_id</code>.
     */
    public void setRunId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.policy.run_id</code>.
     */
    public Long getRunId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.policy.external_id</code>.
     */
    public void setExternalId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.policy.external_id</code>.
     */
    public String getExternalId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.policy.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.policy.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.policy.started_at</code>.
     */
    public void setStartedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.policy.started_at</code>.
     */
    public LocalDateTime getStartedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.policy.stopped_at</code>.
     */
    public void setStoppedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.policy.stopped_at</code>.
     */
    public LocalDateTime getStoppedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.policy.exported_at</code>.
     */
    public void setExportedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.policy.exported_at</code>.
     */
    public LocalDateTime getExportedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.policy.has_file</code>.
     */
    public void setHasFile(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.policy.has_file</code>.
     */
    public Boolean getHasFile() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.policy.is_valid</code>.
     */
    public void setIsValid(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.policy.is_valid</code>.
     */
    public Boolean getIsValid() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.policy.check_point_file_key</code>.
     */
    public void setCheckPointFileKey(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.policy.check_point_file_key</code>.
     */
    public String getCheckPointFileKey() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, Long, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Boolean, Boolean, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, Long, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Boolean, Boolean, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Policy.POLICY.ID;
    }

    @Override
    public Field<Long> field2() {
        return Policy.POLICY.RUN_ID;
    }

    @Override
    public Field<String> field3() {
        return Policy.POLICY.EXTERNAL_ID;
    }

    @Override
    public Field<String> field4() {
        return Policy.POLICY.NAME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Policy.POLICY.STARTED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Policy.POLICY.STOPPED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Policy.POLICY.EXPORTED_AT;
    }

    @Override
    public Field<Boolean> field8() {
        return Policy.POLICY.HAS_FILE;
    }

    @Override
    public Field<Boolean> field9() {
        return Policy.POLICY.IS_VALID;
    }

    @Override
    public Field<String> field10() {
        return Policy.POLICY.CHECK_POINT_FILE_KEY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getRunId();
    }

    @Override
    public String component3() {
        return getExternalId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public LocalDateTime component5() {
        return getStartedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getStoppedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getExportedAt();
    }

    @Override
    public Boolean component8() {
        return getHasFile();
    }

    @Override
    public Boolean component9() {
        return getIsValid();
    }

    @Override
    public String component10() {
        return getCheckPointFileKey();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getRunId();
    }

    @Override
    public String value3() {
        return getExternalId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public LocalDateTime value5() {
        return getStartedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getStoppedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getExportedAt();
    }

    @Override
    public Boolean value8() {
        return getHasFile();
    }

    @Override
    public Boolean value9() {
        return getIsValid();
    }

    @Override
    public String value10() {
        return getCheckPointFileKey();
    }

    @Override
    public PolicyRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PolicyRecord value2(Long value) {
        setRunId(value);
        return this;
    }

    @Override
    public PolicyRecord value3(String value) {
        setExternalId(value);
        return this;
    }

    @Override
    public PolicyRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public PolicyRecord value5(LocalDateTime value) {
        setStartedAt(value);
        return this;
    }

    @Override
    public PolicyRecord value6(LocalDateTime value) {
        setStoppedAt(value);
        return this;
    }

    @Override
    public PolicyRecord value7(LocalDateTime value) {
        setExportedAt(value);
        return this;
    }

    @Override
    public PolicyRecord value8(Boolean value) {
        setHasFile(value);
        return this;
    }

    @Override
    public PolicyRecord value9(Boolean value) {
        setIsValid(value);
        return this;
    }

    @Override
    public PolicyRecord value10(String value) {
        setCheckPointFileKey(value);
        return this;
    }

    @Override
    public PolicyRecord values(Long value1, Long value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6, LocalDateTime value7, Boolean value8, Boolean value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PolicyRecord
     */
    public PolicyRecord() {
        super(Policy.POLICY);
    }

    /**
     * Create a detached, initialised PolicyRecord
     */
    public PolicyRecord(Long id, Long runId, String externalId, String name, LocalDateTime startedAt, LocalDateTime stoppedAt, LocalDateTime exportedAt, Boolean hasFile, Boolean isValid, String checkPointFileKey) {
        super(Policy.POLICY);

        setId(id);
        setRunId(runId);
        setExternalId(externalId);
        setName(name);
        setStartedAt(startedAt);
        setStoppedAt(stoppedAt);
        setExportedAt(exportedAt);
        setHasFile(hasFile);
        setIsValid(isValid);
        setCheckPointFileKey(checkPointFileKey);
    }
}
