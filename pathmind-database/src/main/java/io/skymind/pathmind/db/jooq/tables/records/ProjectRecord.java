/*
 * This file is generated by jOOQ.
 */
package io.skymind.pathmind.db.jooq.tables.records;


import io.skymind.pathmind.db.jooq.tables.Project;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record7<Long, Long, String, LocalDateTime, LocalDateTime, Boolean, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.project.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.project.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.project.pathmind_user_id</code>.
     */
    public void setPathmindUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.project.pathmind_user_id</code>.
     */
    public Long getPathmindUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.project.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.project.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.project.date_created</code>.
     */
    public void setDateCreated(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.project.date_created</code>.
     */
    public LocalDateTime getDateCreated() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.project.last_activity_date</code>.
     */
    public void setLastActivityDate(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.project.last_activity_date</code>.
     */
    public LocalDateTime getLastActivityDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.project.archived</code>.
     */
    public void setArchived(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.project.archived</code>.
     */
    public Boolean getArchived() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.project.user_notes</code>.
     */
    public void setUserNotes(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.project.user_notes</code>.
     */
    public String getUserNotes() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, String, LocalDateTime, LocalDateTime, Boolean, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, String, LocalDateTime, LocalDateTime, Boolean, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Project.PROJECT.ID;
    }

    @Override
    public Field<Long> field2() {
        return Project.PROJECT.PATHMIND_USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Project.PROJECT.NAME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Project.PROJECT.DATE_CREATED;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Project.PROJECT.LAST_ACTIVITY_DATE;
    }

    @Override
    public Field<Boolean> field6() {
        return Project.PROJECT.ARCHIVED;
    }

    @Override
    public Field<String> field7() {
        return Project.PROJECT.USER_NOTES;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPathmindUserId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public LocalDateTime component4() {
        return getDateCreated();
    }

    @Override
    public LocalDateTime component5() {
        return getLastActivityDate();
    }

    @Override
    public Boolean component6() {
        return getArchived();
    }

    @Override
    public String component7() {
        return getUserNotes();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPathmindUserId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public LocalDateTime value4() {
        return getDateCreated();
    }

    @Override
    public LocalDateTime value5() {
        return getLastActivityDate();
    }

    @Override
    public Boolean value6() {
        return getArchived();
    }

    @Override
    public String value7() {
        return getUserNotes();
    }

    @Override
    public ProjectRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProjectRecord value2(Long value) {
        setPathmindUserId(value);
        return this;
    }

    @Override
    public ProjectRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProjectRecord value4(LocalDateTime value) {
        setDateCreated(value);
        return this;
    }

    @Override
    public ProjectRecord value5(LocalDateTime value) {
        setLastActivityDate(value);
        return this;
    }

    @Override
    public ProjectRecord value6(Boolean value) {
        setArchived(value);
        return this;
    }

    @Override
    public ProjectRecord value7(String value) {
        setUserNotes(value);
        return this;
    }

    @Override
    public ProjectRecord values(Long value1, Long value2, String value3, LocalDateTime value4, LocalDateTime value5, Boolean value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(Long id, Long pathmindUserId, String name, LocalDateTime dateCreated, LocalDateTime lastActivityDate, Boolean archived, String userNotes) {
        super(Project.PROJECT);

        setId(id);
        setPathmindUserId(pathmindUserId);
        setName(name);
        setDateCreated(dateCreated);
        setLastActivityDate(lastActivityDate);
        setArchived(archived);
        setUserNotes(userNotes);
    }
}
