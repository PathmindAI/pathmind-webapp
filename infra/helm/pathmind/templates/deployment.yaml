apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
{{ include "pathmind.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
        iam.amazonaws.com/role: eks
      labels:
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash","-c","aws sqs delete-queue --queue-url https://sqs.us-east-1.amazonaws.com/839270835622/$(hostname)-updater-queue"]
          command: {{ .Values.image.command }}
          args:
{{- range .Values.image.args }}
            - {{ . }}
{{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
      {{- with .Values.probes }}
        {{- toYaml . | nindent 10 }}
      {{- end }}
          env:
            - name: APPLICATION_URL
              value: "{{ .Values.env.APPLICATION_URL }}"
            - name: PATHMIND_API_URL
              value: "{{ .Values.env.PATHMIND_API_URL }}"
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.DB_SECRET_NAME }}
                  key: {{ .Values.env.DB_SECRET_KEY }}
            - name: INTERCOM_APP_ID 
              value: "{{ .Values.env.INTERCOM_APP_ID }}"
            - name: SEGMENT_WEBSITE_KEY
              valueFrom:
                secretKeyRef:
                  name: segmentwebsitekey
                  key: SEGMENT_WEBSITE_KEY
            - name: SEGMENT_SERVER_KEY
              valueFrom:
                secretKeyRef:
                  name: segmentserversitekey
                  key: SEGMENT_SERVER_KEY
            - name: WEBSITE_HTTPLOGGING_RETENTION_DAYS
              value: "{{ .Values.env.WEBSITE_HTTPLOGGING_RETENTION_DAYS }}"
            - name: PATHMIND_LOG_FILE_PATH
              value: "{{ .Values.env.PATHMIND_LOG_FILE_PATH }}"
            - name: SCM_COMMAND_IDLE_TIMEOUT
              value: "{{ .Values.env.SCM_COMMAND_IDLE_TIMEOUT }}"
            - name: MODEL_ANALYZER_URL
              value: "{{ .Values.env.MODEL_ANALYZER_URL }}"
            - name: ENVIRONMENT
              value: "{{ .Values.env.ENVIRONMENT }}"
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: NEW_RUN_DAILY_LIMIT
              value: "{{ .Values.env.NEW_RUN_DAILY_LIMIT }}"
            - name: NEW_RUN_MONTHLY_LIMIT
              value: "{{ .Values.env.NEW_RUN_MONTHLY_LIMIT }}"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: awsaccesskey
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: awssecretaccesskey
                  key: AWS_SECRET_ACCESS_KEY
            - name: SQS_URL
              value: "{{ .Values.env.SQS_URL }}"
            - name: S3_BUCKET
              value: "{{ .Values.env.S3_BUCKET }}"
            - name: S3_BUCKET_STATIC
              value: "{{ .Values.env.S3_BUCKET_STATIC }}"
            - name: JOB_MOCK_CYCLE
              value: "{{ .Values.env.JOB_MOCK_CYCLE }}"
            - name: JOB_MOCK_MAX_MIN
              value: "{{ .Values.env.JOB_MOCK_MAX_MIN }}"
            - name: SQS_UPDATER_URL
              value: "{{ .Values.env.SQS_UPDATER_URL }}"
            - name: SNS_UPDATER_TOPIC_ARN
              value: "{{ .Values.env.SNS_UPDATER_TOPIC_ARN }}"
            - name: SNS_UPDATER_SQS_FILTER_ATTR
              value: "{{ .Values.env.SNS_UPDATER_SQS_FILTER_ATTR }}"
            - name: SQS_UPDATER_PUNCTUATOR_QUEUE
              value: "{{ .Values.env.SQS_UPDATER_PUNCTUATOR_QUEUE }}"
            - name: SQS_POLICY_SERVER_URL
              value: "{{ .Values.env.SQS_POLICY_SERVER_URL }}"
            - name: PATHMIND_STRIPE_PUBLIC_KEY
              value: "{{ .Values.env.PATHMIND_STRIPE_PUBLIC_KEY }}"
            - name: PATHMIND_STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: pathmindstripesecretkey
                  key: PATHMINDSTRIPESECRETKEY
            - name: PATHMIND_STRIPE_WEBHOOK_SIGNING_SECRET
              valueFrom:
                secretKeyRef:
                  name: pathmindstripewebhooksigninsecret
                  key: PATHMINDSTRIPEWEBHOOKSIGNINGSECRET
            - name: PATHMIND_STRIPE_PROFESSIONAL_PLAN_ID
              value: "{{ .Values.env.PATHMIND_STRIPE_PROFESSIONAL_PLAN_ID }}"
            - name: PATHMIND_STRIPE_ONBOARDING_PRICE_ID
              value: "{{ .Values.env.PATHMIND_STRIPE_ONBOARDING_PRICE_ID }}"
            - name: POLICY_SERVING
              value: "{{ .Values.env.POLICY_SERVING }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
