apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jenkins.fullname" . }}
  labels:
{{ include "jenkins.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jenkins.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "jenkins.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: jenkins-storage
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.claimName }}
        - name: docker-graph-storage
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: ADMIN_USER
              value: admin
            - name: ADMIN_PASSWORD
              value: password
            - name: DOCKER_HOST
              value: tcp://localhost:2375
            - name: S3BUCKET
              value: {{ .Values.env.S3BUCKET }}
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: awsaccesskey
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: awssecretaccesskey
                  key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
            - name: jenkins-storage
              mountPath: /var/jenkins_home
        - name: dind-daemon
          image: "{{ .Values.image2.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              cpu: 20m
              memory: 512Mi
          securityContext:
            privileged: true
          volumeMounts:
          - name: docker-graph-storage
            mountPath: /var/lib/docker

