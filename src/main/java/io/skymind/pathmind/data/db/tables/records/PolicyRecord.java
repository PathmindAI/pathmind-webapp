/*
 * This file is generated by jOOQ.
 */
package io.skymind.pathmind.data.db.tables.records;


import io.skymind.pathmind.data.db.tables.Policy;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PolicyRecord extends UpdatableRecordImpl<PolicyRecord> implements Record12<Long, Long, String, String, JSONB, LocalDateTime, LocalDateTime, String, Double, Double, Integer, String> {

    private static final long serialVersionUID = -2084804958;

    /**
     * Setter for <code>public.policy.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.policy.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.policy.run_id</code>.
     */
    public void setRunId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.policy.run_id</code>.
     */
    public Long getRunId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.policy.external_id</code>.
     */
    public void setExternalId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.policy.external_id</code>.
     */
    public String getExternalId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.policy.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.policy.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.policy.progress</code>.
     */
    public void setProgress(JSONB value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.policy.progress</code>.
     */
    public JSONB getProgress() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>public.policy.started_at</code>.
     */
    public void setStartedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.policy.started_at</code>.
     */
    public LocalDateTime getStartedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.policy.stopped_at</code>.
     */
    public void setStoppedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.policy.stopped_at</code>.
     */
    public LocalDateTime getStoppedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.policy.algorithm</code>.
     */
    public void setAlgorithm(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.policy.algorithm</code>.
     */
    public String getAlgorithm() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.policy.learning_rate</code>.
     */
    public void setLearningRate(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.policy.learning_rate</code>.
     */
    public Double getLearningRate() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>public.policy.gamma</code>.
     */
    public void setGamma(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.policy.gamma</code>.
     */
    public Double getGamma() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>public.policy.batch_size</code>.
     */
    public void setBatchSize(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.policy.batch_size</code>.
     */
    public Integer getBatchSize() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>public.policy.notes</code>.
     */
    public void setNotes(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.policy.notes</code>.
     */
    public String getNotes() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, String, String, JSONB, LocalDateTime, LocalDateTime, String, Double, Double, Integer, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Long, String, String, JSONB, LocalDateTime, LocalDateTime, String, Double, Double, Integer, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Policy.POLICY.ID;
    }

    @Override
    public Field<Long> field2() {
        return Policy.POLICY.RUN_ID;
    }

    @Override
    public Field<String> field3() {
        return Policy.POLICY.EXTERNAL_ID;
    }

    @Override
    public Field<String> field4() {
        return Policy.POLICY.NAME;
    }

    @Override
    public Field<JSONB> field5() {
        return Policy.POLICY.PROGRESS;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Policy.POLICY.STARTED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Policy.POLICY.STOPPED_AT;
    }

    @Override
    public Field<String> field8() {
        return Policy.POLICY.ALGORITHM;
    }

    @Override
    public Field<Double> field9() {
        return Policy.POLICY.LEARNING_RATE;
    }

    @Override
    public Field<Double> field10() {
        return Policy.POLICY.GAMMA;
    }

    @Override
    public Field<Integer> field11() {
        return Policy.POLICY.BATCH_SIZE;
    }

    @Override
    public Field<String> field12() {
        return Policy.POLICY.NOTES;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getRunId();
    }

    @Override
    public String component3() {
        return getExternalId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public JSONB component5() {
        return getProgress();
    }

    @Override
    public LocalDateTime component6() {
        return getStartedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getStoppedAt();
    }

    @Override
    public String component8() {
        return getAlgorithm();
    }

    @Override
    public Double component9() {
        return getLearningRate();
    }

    @Override
    public Double component10() {
        return getGamma();
    }

    @Override
    public Integer component11() {
        return getBatchSize();
    }

    @Override
    public String component12() {
        return getNotes();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getRunId();
    }

    @Override
    public String value3() {
        return getExternalId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public JSONB value5() {
        return getProgress();
    }

    @Override
    public LocalDateTime value6() {
        return getStartedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getStoppedAt();
    }

    @Override
    public String value8() {
        return getAlgorithm();
    }

    @Override
    public Double value9() {
        return getLearningRate();
    }

    @Override
    public Double value10() {
        return getGamma();
    }

    @Override
    public Integer value11() {
        return getBatchSize();
    }

    @Override
    public String value12() {
        return getNotes();
    }

    @Override
    public PolicyRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PolicyRecord value2(Long value) {
        setRunId(value);
        return this;
    }

    @Override
    public PolicyRecord value3(String value) {
        setExternalId(value);
        return this;
    }

    @Override
    public PolicyRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public PolicyRecord value5(JSONB value) {
        setProgress(value);
        return this;
    }

    @Override
    public PolicyRecord value6(LocalDateTime value) {
        setStartedAt(value);
        return this;
    }

    @Override
    public PolicyRecord value7(LocalDateTime value) {
        setStoppedAt(value);
        return this;
    }

    @Override
    public PolicyRecord value8(String value) {
        setAlgorithm(value);
        return this;
    }

    @Override
    public PolicyRecord value9(Double value) {
        setLearningRate(value);
        return this;
    }

    @Override
    public PolicyRecord value10(Double value) {
        setGamma(value);
        return this;
    }

    @Override
    public PolicyRecord value11(Integer value) {
        setBatchSize(value);
        return this;
    }

    @Override
    public PolicyRecord value12(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public PolicyRecord values(Long value1, Long value2, String value3, String value4, JSONB value5, LocalDateTime value6, LocalDateTime value7, String value8, Double value9, Double value10, Integer value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PolicyRecord
     */
    public PolicyRecord() {
        super(Policy.POLICY);
    }

    /**
     * Create a detached, initialised PolicyRecord
     */
    public PolicyRecord(Long id, Long runId, String externalId, String name, JSONB progress, LocalDateTime startedAt, LocalDateTime stoppedAt, String algorithm, Double learningRate, Double gamma, Integer batchSize, String notes) {
        super(Policy.POLICY);

        set(0, id);
        set(1, runId);
        set(2, externalId);
        set(3, name);
        set(4, progress);
        set(5, startedAt);
        set(6, stoppedAt);
        set(7, algorithm);
        set(8, learningRate);
        set(9, gamma);
        set(10, batchSize);
        set(11, notes);
    }
}
